@using Orbital7.RapidApp.Models

@model RATouchPadModel

<div id="ra-touchpad" style="width: 100%; height: 100%;">

    <table style="width: 100%; height: 100%">
        <tr>
            <td class="ra-touchpad-cell"
                ontouchstart="handleTouchStart(this);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this); handleClear(); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleClear();">
                CLEAR
            </td>
            <td class="ra-touchpad-cell"
                colspan="2"
                ontouchstart="handleTouchStart(this);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this); handleBackspace(); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleBackspace();">
                BACKSPACE
            </td>
        </tr>
        <tr>
            <td class="ra-touchpad-cell"
                ontouchstart="handleTouchStart(this, event);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this, event); handleKey(this); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleKey(this);">7</td>
            <td class="ra-touchpad-cell"
                ontouchstart="handleTouchStart(this, event);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this, event); handleKey(this); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleKey(this);">8</td>
            <td class="ra-touchpad-cell"
                ontouchstart="handleTouchStart(this, event);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this, event); handleKey(this); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleKey(this);">9</td>
        </tr>
        <tr>
            <td class="ra-touchpad-cell"
                ontouchstart="handleTouchStart(this);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this); handleKey(this); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleKey(this);">4</td>
            <td class="ra-touchpad-cell"
                ontouchstart="handleTouchStart(this);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this); handleKey(this); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleKey(this);">5</td>
            <td class="ra-touchpad-cell"
                ontouchstart="handleTouchStart(this);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this); handleKey(this); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleKey(this);">6</td>
        </tr>
        <tr>
            <td class="ra-touchpad-cell"
                ontouchstart="handleTouchStart(this);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this); handleKey(this); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleKey(this);">1</td>
            <td class="ra-touchpad-cell"
                ontouchstart="handleTouchStart(this);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this); handleKey(this); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleKey(this);">2</td>
            <td class="ra-touchpad-cell"
                ontouchstart="handleTouchStart(this);"
                onmousedown="handleTouchStart(this);"
                ontouchend="handleTouchEnd(this); handleKey(this); event.preventDefault();"
                onmouseup="handleTouchEnd(this); handleKey(this);">3</td>
        </tr>
        <tr>
            @if (this.Model.Mode == TouchPadMode.PIN || this.Model.Mode == TouchPadMode.Integer || this.Model.Mode == TouchPadMode.PhoneNumber)
            {
                <td class="ra-touchpad-cell" colspan="2"
                    ontouchstart="handleTouchStart(this);"
                    onmousedown="handleTouchStart(this);"
                    ontouchend="handleTouchEnd(this); handleKey(this); event.preventDefault();"
                    onmouseup="handleTouchEnd(this); handleKey(this);">0</td>
            }
            else if (this.Model.Mode == TouchPadMode.Currency || this.Model.Mode == TouchPadMode.Double)
            {
                <td class="ra-touchpad-cell"
                    ontouchstart="handleTouchStart(this);"
                    onmousedown="handleTouchStart(this);"
                    ontouchend="handleTouchEnd(this); handleKey(this); event.preventDefault();"
                    onmouseup="handleTouchEnd(this); handleKey(this);">0</td>
                <td class="ra-touchpad-cell"
                    ontouchstart="handleTouchStart(this);"
                    onmousedown="handleTouchStart(this);"
                    ontouchend="handleTouchEnd(this); handleKey(this); event.preventDefault();"
                    onmouseup="handleTouchEnd(this); handleKey(this);">.</td>
            }
            @if (this.Model.ShowDoneButton)
            {
                <td class="ra-touchpad-cell font-bold"
                    ontouchstart="handleTouchStart(this);"
                    onmousedown="handleTouchStart(this);"
                    ontouchend="handleTouchEnd(this); closeTouchDialog(); event.preventDefault();"
                    onmouseup="handleTouchEnd(this); closeTouchDialog();">
                    DONE
                </td>
            }
            else
            {
                <td class="ra-touchpad-cell font-bold">
                    &nbsp;
                </td>

            }
        </tr>
    </table>

</div>

<script>

    var _isFirstKeyPress = true;
    var _touchPadValue = $("#" + "@this.Model.ValueId").val() + "";

    function handleTouchStart(source) {
        $(source).addClass("ra-touchpad-cell-down");
    }

    function handleTouchEnd(source) {
        $(source).removeClass("ra-touchpad-cell-down");
    }

    function handleKey(source) {
        if (_isFirstKeyPress)
            handleClear();

        _isFirstKeyPress = false;
        _touchPadValue += $(source).html();
        updateValueInput();
    }

    function handleClear() {
        
        _isFirstKeyPress = false;
        _touchPadValue = "";
        updateValueInput();
    }

    function handleBackspace() {

        _isFirstKeyPress = false;
        if (_touchPadValue.length > 0) {
            _touchPadValue = _touchPadValue.substr(0, _touchPadValue.length - 1);
            updateValueInput();
        }
    }

    function updateValueInput() {
        updateTouchInputField("@this.Model.ValueId", _touchPadValue, "", "", "", "", "", "", "", "", "@this.Model.PostEditUpdateScript");
    }

</script>